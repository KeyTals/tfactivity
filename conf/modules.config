/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: '.*:PREPARE_GENOME:EXTRACT_ID_SYMBOL_MAP' {
        ext.args = "-l \"gene_id,gene_name\""
    }

    withName: CLEAN_BED {
        ext.args = {"'{print \$1 \"\\t\" \$2 \"\\t\" \$3}'"}
        ext.prefix = {"${meta.id}.clean"}
        ext.suffix = "bed"
    }

    withName: BEDTOOLS_SORT {
        ext.prefix = {"${meta.id}.sorted"}
    }

    withName: BEDTOOLS_MERGE {
        ext.prefix = {"${meta.id}.merged"}
    }

    withName: ANNOTATE_SAMPLES {
        ext.args = {"'{print \$0 \"\\t\" \"${meta.id}\"}'"}
        ext.prefix = {"${meta.id}.annotated"}
    }

    withName: CONCAT_SAMPLES {
        ext.prefix = {"${meta.id}.concatenated"}
    }

    withName: FILTER_MIN_OCCURRENCE {
        ext.args = "'\$NF >= ${params.min_peak_occurrence}'"
    }

    withName: ".*:FOOTPRINTING:BEDTOOLS_MERGE" {
        ext.args = {"-d ${meta.max_peak_gap}"}
        ext.prefix = {"${meta.id}.merged"}
    }

    withName: ".*DYNAMITE:FILTER" {
        ext.args = {"'BEGIN{OFS=\"\\t\"} NR==1 || (\$2 >= ${params.dynamite_min_regression} || \$2 <= -${params.dynamite_min_regression} )'"}
        ext.prefix = {"${meta.id}.filtered"}
        ext.suffix = "tsv"
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
